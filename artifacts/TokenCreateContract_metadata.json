{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "doner",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "date",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "condition",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "donatedTo",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isConsented",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isEvaluated",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isStored",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isAssigned",
						"type": "bool"
					}
				],
				"name": "organIdCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "patient",
						"type": "string"
					}
				],
				"name": "requestApproved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "patient",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isApproved",
						"type": "bool"
					}
				],
				"name": "requestIdCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "patientName",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "isApproved",
								"type": "bool"
							}
						],
						"internalType": "struct TokenCreateContract.RequestId",
						"name": "_request",
						"type": "tuple"
					}
				],
				"name": "approveRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "availableOrgan",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_donerName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_date",
						"type": "uint256"
					}
				],
				"name": "createOrgan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "patientName",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "createRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAvailableOrganCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getOrgan",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "donerName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "dateDonated",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "condition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "donatedTo",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "isConsented",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isEvaluated",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isStored",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isAssigned",
								"type": "bool"
							}
						],
						"internalType": "struct TokenCreateContract.OrganId",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getRequest",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "patientName",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "isApproved",
								"type": "bool"
							}
						],
						"internalType": "struct TokenCreateContract.RequestId",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "organCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "organs",
				"outputs": [
					{
						"internalType": "string",
						"name": "donerName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "dateDonated",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "condition",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "donatedTo",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isConsented",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isEvaluated",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isStored",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isAssigned",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requestCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "requests",
				"outputs": [
					{
						"internalType": "string",
						"name": "patientName",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isApproved",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalRequest",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "donerName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "dateDonated",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "condition",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "donatedTo",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "isConsented",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isEvaluated",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isStored",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isAssigned",
								"type": "bool"
							}
						],
						"internalType": "struct TokenCreateContract.OrganId",
						"name": "_organ",
						"type": "tuple"
					}
				],
				"name": "updateOrgan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approveRequest(uint256,(string,bool))": {
					"details": "This function iterates through all organs, finds one that is not assigned, has been consented to, evaluated, stored, but still available, updates the  corresponding OrganId struct with the new donor information and emits an event indicating approval of a request. It also increments or decrements counters as needed.",
					"params": {
						"_id": "The unique identifier of the request being approved.*"
					}
				},
				"createOrgan(string,uint256)": {
					"details": "This function creates an OrganId struct and stores it in the mapping of organs, incrementing both organCount and availableOrgan. It also emits an event to notify that an organ has been created.",
					"params": {
						"_date": "The date when this organ was donated.",
						"_donerName": "The name of the donor who donated this organ."
					}
				},
				"createRequest(string,bool)": {
					"details": "This function creates an RequestId struct and stores it in the mapping of requests, incrementing both requestCount and totalRequest. It also emits an event to notify that a request has been created.",
					"params": {
						"approved": "Whether or not this request is approved",
						"patientName": "The name of the patient who made this request."
					}
				},
				"getAvailableOrganCount()": {
					"details": "This function returns the number of organs currently assigned and not yet stored, evaluated or consented.",
					"returns": {
						"count": "of available organs in this contract."
					}
				},
				"getOrgan(uint256)": {
					"details": "This function retrieves and returns an OrganId struct by its ID, if it exists in the mapping.",
					"params": {
						"_id": "The unique identifier of the organ to be retrieved."
					},
					"returns": {
						"_0": "An OrganId struct with details about the requested organ, or a default value (all fields set to their zero-value) if not found."
					}
				},
				"getRequest(uint256)": {
					"details": "This function retrieves and returns an RequestId struct by its ID, if it exists in the mapping.",
					"params": {
						"_id": "The unique identifier of the request to be retrieved."
					},
					"returns": {
						"_0": "An RequestId struct with details about the requested organ, or a default value (all fields set to their zero-value) if not found."
					}
				},
				"updateOrgan(uint256,(string,uint256,string,string,bool,bool,bool,bool))": {
					"details": "This function updates and replaces the existing OrganId struct with a new one, if it exists in the mapping.",
					"params": {
						"_id": "The unique identifier of the organ to be updated.*"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"approveRequest(uint256,(string,bool))": {
					"notice": "Approves a request and assigns an available organ."
				},
				"createOrgan(string,uint256)": {
					"notice": "Creates a new organ ID with provided details."
				},
				"createRequest(string,bool)": {
					"notice": "Creates a new request ID with provided details."
				},
				"getAvailableOrganCount()": {
					"notice": "Retrieves the current available organ count."
				},
				"getOrgan(uint256)": {
					"notice": "Retrieves an OrganId struct from the mapping of organs."
				},
				"getRequest(uint256)": {
					"notice": "Retrieves a request ID from the mapping of requests."
				},
				"updateOrgan(uint256,(string,uint256,string,string,bool,bool,bool,bool))": {
					"notice": "Updates an existing OrganId struct in the mapping of organs."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"OrganCreateContract.sol": "TokenCreateContract"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"OrganCreateContract.sol": {
			"keccak256": "0x11aa59c7d69ba47e7deb996b4af8ee9b7165b036b54f94b0d6a09a12a7e5531a",
			"license": "MIT",
			"urls": [
				"bzz-raw://633a9a90aca2f9488900dd42cacba0e7bb3aad6919aa9c38f950637d2b4fe177",
				"dweb:/ipfs/QmXncQNAKWMi7oxTqKKHGbaiKkCwDHSCRYiWBXwhodD1hP"
			]
		}
	},
	"version": 1
}